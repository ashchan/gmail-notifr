#!/usr/bin/env ruby
require 'net/https'
require 'rexml/document'
require 'yaml'

class GmailChecker
  # password should be base64 encoded
  def initialize(username, password, all_labels)
    @username = username
    @password = password.unpack("m").first
	@all_labels = [true, "true", 1, "1", "T", "t"].include?(all_labels.downcase)
  end
  
  def check
    http = Net::HTTP.new("mail.google.com", 443)
    http.use_ssl = true
    http.verify_mode = OpenSSL::SSL::VERIFY_NONE
    response = nil
    result = { :error => "ConnectionError", :count => 0, :messages => [] }

    begin
      http.start do |http|
	  if @all_labels
		req = Net::HTTP::Get.new("/mail/feed/atom/unread")
	  else
		req = Net::HTTP::Get.new("/mail/feed/atom")
	  end
      req.basic_auth(@username, @password)
      response = http.request(req)
      end


      if response
        case response.code
        when "401" #HTTPUnauthorized
          result[:error] = "UserError"
        when "200" #HTTPOK        
          feed = REXML::Document.new response.body
          # messages count
          result[:count] = feed.get_elements('/feed/fullcount')[0].text.to_i
          result[:error] = "No"
          
          cnt = 0
          feed.each_element('/feed/entry') do |msg|
            cnt += 1
            # only return first 10 messages
            break if cnt > 10
            
            #contributor = msg.get_elements('contributor')[0]
            #author = if contributor 
            #  contributor.get_elements('name')[0].text
            #else
            #  msg.get_elements('author/name')[0].text
            #end
            
            # gmail atom gives time string like 2009-08-29T24:56:52Z
            date = DateTime.parse(msg.get_elements('issued')[0].text) rescue DateTime.parse(Date.today.to_s)

            result[:messages] << {
              :link => msg.get_elements('link')[0].attributes['href'],
              :author => msg.get_elements('author/name')[0].text,
              :subject => msg.get_elements('title')[0].text,
              :id => msg.get_elements('id')[0].text,
              :date => date,
              :summary => msg.get_elements('summary')[0].text
            }
          end
        end
      end
    rescue REXML::ParseException => e
      #puts "error parsing feed: #{e.message}"
    rescue => e
      #puts "error: #{e}"
    rescue Timeout::Error => e
      #puts "time out on connection"
    end
    
    result
  end
end

results = {}
(ARGV.length / 3).times do |t|
  results[ARGV[t * 3]] = GmailChecker.new(ARGV[t * 3], ARGV[t * 3 + 1], ARGV[t * 3 + 2]).check
end

print results.to_yaml